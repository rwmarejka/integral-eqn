%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 17 FMDOCUMENT
0 0 /Palatino-Roman FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /Helvetica FMFONTDEFINE
4 0 /Palatino-Italic FMFONTDEFINE
5 1 /ZapfDingbats FMFONTDEFINE
6 0 /Times-Italic FMFONTDEFINE
7 1 /Symbol FMFONTDEFINE
8 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "7" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(7 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.76 676.42 700 694.42 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.76 676.42 700 694.42 R
7 X
0 0 0 1 0 0 0 K
V
95.76 685.42 716.76 685.42 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Case Study #2) 95.76 702.42 T
3 18 Q
(Conclusions) 95.76 657.42 T
0 16 Q
0.16 (1.) 153.36 618.75 S
0.83 0.16 (Conversion fr) 174.96 618.75 B
0.83 0.16 (om C to C with thr) 275.13 618.75 B
0.83 0.16 (eads r) 414.76 618.75 B
0.83 0.16 (equir) 458.81 618.75 B
0.83 0.16 (ed appr) 496.57 618.75 B
0.83 0.16 (oximately 3 man-) 553.22 618.75 B
0.83 0.16 (days of ef) 174.96 600.35 B
0.83 0.16 (fort. Original pr) 246.45 600.35 B
0.83 0.16 (ogram took 21 man-days to write and test.) 363.15 600.35 B
0.16 (2.) 153.36 573.95 S
0.83 0.16 (For lar) 174.96 573.95 B
0.83 0.16 (ge values of) 223.55 573.95 B
4 F
0.83 0.16 (N) 316.54 573.95 B
0 F
0.83 0.16 (: performance impr) 329.15 573.95 B
0.83 0.16 (ovement ranged fr) 470.31 573.95 B
0.83 0.16 (om 5.3x to) 605.78 573.95 B
0.83 0.16 (9.2x faster \050on an 8 CPU system\051.) 174.96 555.55 B
0.16 (3.) 153.36 529.15 S
0.83 0.16 (Some learned r) 174.96 529.15 B
0.83 0.16 (ules:) 285.37 529.15 B
0.16 (a.) 182.16 502.75 S
0.83 0.16 (Understand the pr) 203.76 502.75 B
0.83 0.16 (oblem.) 338.59 502.75 B
0.16 (b.) 182.16 476.35 S
0.83 0.16 (Understand data generation and \337ow) 203.11 476.35 B
0.83 0.16 (.) 476.67 476.35 B
0.16 (c.) 182.16 449.95 S
0.83 0.16 (Balance conversion ef) 203.11 449.95 B
0.83 0.16 (fort with performance impr) 361.01 449.95 B
0.83 0.16 (ovement goals.) 562.42 449.95 B
583.33 192.1 700.69 255.1 R
7 X
V
583.33 195.42 700.69 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
583.33 195.42 700.69 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 591.15 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
96 225 296 240 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 96 232 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 1
%%Page: "6" 2
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(6 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
92.7 678.72 697.67 696.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
92.7 678.72 697.67 696.72 R
7 X
0 0 0 1 0 0 0 K
V
92.7 687.72 713.7 687.72 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Case Study #2) 92.7 704.72 T
3 18 Q
(Results \050continued\051) 92.7 659.72 T
4 14 Q
0.73 0.14 (Figur) 96.34 625.05 B
0.73 0.14 (e 1) 128.7 625.05 B
0 10 Q
0.52 0.1 (Ntask and % impr) 145.79 625.05 B
0.52 0.1 (ovement) 229.67 625.05 B
92.7 259.93 697.67 720.72 C
110.29 266.41 680.08 621.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  9018     
527 327 527 327 0 144.25 296.65
/red <
8426090042000000000000009CF0FFEF14AC0800100A09001600000006000000
00E1F50000002E3006000000060000000600000001000000FCFFFF7F00000000
FFFFFF7FF1770B000000000000000000FF070000FFFFFFFFE8EFFFEFD8EFFFEF
E09F020038F0FFEF00C408004200000001000000030000000300000003000000
00C408000400000003000000030000000000000000000000200A090014F0FFEF
01000000E8EFFFEFECEFFFEFFBFFFF7F88F0FFEF09000000000000005AF20800
FFFFFF7F00000000FFFFFF7F00000000E01B020070EFFFEFEB770B00D4F0FFEF
100A09000000F03F020000007300000000000000CCF0FFEF01000000000000FF
> store
/green <
05000000000000000000000002730E4400F2FFEF00F2FFEF00F40800FFFFFFFF
01000000000000000000000000000000006B0900FCF1FFEF00F2FFEF06000000
00000000000000000000000038F5080018520B00E0000000FC00000011000000
0700000038F508000000000038F50800000000000000000000F8080084260900
42000000000000009CF0FFEF0000000078B30800A0F0FFEF1CE30100A0F0FFEF
80260900A9FC08006B000000630000000078070038F508000078070038F50800
0078070038F508000078070038F5080000000000000000000700000007000000
070000000100000000000000F3770B000700000000C4080078B3080038F000FF
> store
/blue <
0F000000BC420B0038F5080000780700A4FC0800007807000CF2FFEF000000A0
CDCCCC3D0000000000F2FFEF74000000ECD2010010F2FFEF0000000070000000
700000000000000054AA08000100000018520B00E0000000FC00000011000000
0700000007000000FFFFFFFFFFFFFFFF07000000C7AB6543000000A000000000
00000000000000A010B20800000000005CDF0100A0F1FFEFE8410B0001000000
000000A0A4FC080060A9080000F2FFEF00C40800040000000200000008000000
000000000000000014F0FFEF00C40800FCF1FFEF59F10800100A090001000000
100A0900D3770B000400000000C4080010B2080040F1FFEFA879020040F100FF
> store
 BEGINBITMAPCOLORc


:%;%9%J'
FEFEFEFEFEFEFEFEFEFEFEFEV%FEFEFEFEFEFE9'9.J%
FEFFFFFFFFFEFEFFFFFFFFFEFFFEFFFFFFFFFEV%FFFFFFFF
Jz
@UKFE9'J&Z"Z"Z"Z"Z"Z"Z"Z
FFFEFEFEFEFF7FFFFFFFFFEMFELFEMFELFELFEMFELFEJ9'
FEFFFFFFFFFEJ'
V<FEFEFEFEFEFE@"J)
FEV0FEFFFFFFFEFFFFFF9'9.J$
FFFEFEFEFEFFFFFEFEFEFEFFFFFFFEFEFEFEFFV FEFEFF:%8"8%9%J$
FFFFFFFFFFFFFFFFFFFFFFFFFFV FEFFFFJ#
V7FEFFJ#
V6FEFFJ$
V4FEFEFFJ$
V3FEFFFFJ#
V2FEFFJ#
V1FEFFJ$
V/FEFEFFJ$
V.FEFFFFJ#
V-FEFFJ#
V,FEFFJ$
V*FEFEFFJ$
V)FEFFFFJ#
V(FEFFJ#
V'FEFFJ$
V%FEFEFFJ$
V$FEFFFFJ#
V#FEFFJ#
V"FEFFJ$
V FEFEFFJ$
UMFEFFFFJ#
ULFEFFJ#
UKFEFFJ$
UIFEFEFFJ$
UHFEFFFFJ#
UGFEFFJ#
UFFEFF:&:%9%J#
FEFEFEFEFEFEFEFEFEFEFEFEFEU-FEFF:%:.Js"
FFFFFFFFFEFFFFFFFFFEFFFEFFFFFFFFFEU$FEFFJ(J"
U>FFFFFFFFFEFFFFHFF=#J%
FEFFV5FEFEFEFEJz<z
@TKFEHFE<#J&Z"Z"Z"Z"Z"Z"Z<Z
FEFF8FFFFFFFFFEMFELFEMFELFELFEMFEIHJ%
U>FEFEFEFE;#9"J(J#P
FEFFFEU1FEFFFFFFFEFFFFFFEFEB.J#J$8"
FFFEFEFEFEFFFFFFFEFEFEFEFFU"FEFFKFEFFFFFE;":"8%9%J$J$
FFFFFFFFFFFFFFFFFFFFU!FEFEFFJFEFEFFJ$J%
U8FEFFFFIFEFEFFFFJ#J$
U7FEFFJFEFFFFJ#J$
U6FEFFIFEFEFFJ$J%
U4FEFEFFHFEFEFFFFJ$J$
U3FEFFFFHFEFFFFJ#J$
U2FEFFHFEFEFFJ#J%
U1FEFFGFEFEFFFFJ$J%
U/FEFEFFFFEFEFFFFJ$J$
U.FEFFFFFFEFFFFJ#J$
U-FEFFFFEFEFFJ#J%
U,FEFFEFEFEFFFFJ$J$
U*FEFEFFEFEFFFFJ$J$
U)FEFFFFDFEFEFFJ#J%
U(FEFFDFEFEFFFFJ#J$
U'FEFFDFEFFFFJ$J$
U%FEFEFFCFEFEFFJ$J%
U$FEFFFFBFEFEFFFFJ#J$
U#FEFFCFEFFFFJ#J$
U"FEFFBFEFEFFJ$J"9%
U FEFEFF=FFFEFEFFFFJ$J)
TMFEFFFF<FEFEFEFEFFFEFFFFJ#J"
TLFEFFCFFJ#
TKFEFFJ#
TJFEFFJ$J"P
THFEFEFF?FEJ$J$9"
TGFEFFFF>FEFEFFFEJ#J%
TFFEFF>FEFEFFFF<"<%9%J*J$
FEFEFEFEFEFEFEFEFET&FEFEFEFEFEFEFFFEFF>FEFFFF;#;.J(J$
FEFFFEFFFFFFFFFEFFFEFFFFFFFFFET&FFFFFFFFFEFEFF=FEFEFF:#J"J%
FEFFT>FF<FEFEFFFF;$Jz<z8z
FEFEFE8SLFE=FEO*FE9'J&Z"Z"Z"Z"Z"Z<Z"Z"Z
FEFFFFFFFFFE7FFFFFFFFFEMFELFEMFELFELFEJ:FE/FELJ$
U.FEFEFFJ'J%
T=FEFEFEFEFEFE7FEFEFFFF@"J)J$
FET1FEFFFFFFFFFEFFFF5FEFFFF9'9.J#J$
FFFEFEFEFEFFFFFEFEFEFEFFFFFFFEFEFEFEFFT"FEFF:FEFEFF:%8"8%9%J$J%
FFFFFFFFFFFFFFFFFFFFFFFFFFT!FEFEFF9FEFEFFFFJ$J%
T8FEFFFF8FEFEFFFFJ#J$
T7FEFF9FEFFFFJ#J$
T6FEFF8FEFEFFJ$J%
T4FEFEFF7FEFEFFFFJ$J$
T3FEFFFF7FEFFFFJ#J$
T2FEFF7FEFEFFJ#J%
T1FEFF6FEFEFFFFJ$J$
T/FEFEFF6FEFFFFJ$F":$
T.FEFFFFFFFEFEFFJ#F*
T-FEFFFEFEFEFEFFFEFEFFFFJ#J#
T,FEFF6FFFFJ$
T*FEFEFFJ$
T)FEFFFFJ#I"
T(FEFFFEJ#I"Q
T'FEFFFEJ$H$:"
T%FEFEFFFEFEFFFEJ$H$
T$FEFFFFFEFFFFJ#H$
T#FEFFFEFEFFJ#G%
T"FEFFFEFEFFFFJ#G$
T!FEFFFEFFFFJ$F$
SMFEFEFFFEFEFFJ$F$
SLFEFFFFFEFFFFJ#F$
SKFEFFFEFEFFJ#E%
SJFEFFFEFEFFFFJ$E$
SHFEFEFFFEFFFFJ$D$
SGFEFFFFFEFEFF:%;%9%J#E$
FEFEFEFEFEFEFEFEFEFEFEFES.FEFFFEFFFF;$:.Js"D$
FFFFFFFEFFFFFFFFFEFFFEFFFFFFFFFES%FEFFFEFEFFJP#C%
S?FEFFFEFEFFFF9&J$
FEFEFEFEFESJFEFFFF:&Jz=z
FFFFFFFFFE7RLFEPHFE9"J&Z"Z"Z"Z"Z=U"Z"Z"Z
FF<FFFFFFFFFEMFELFEMFELFEIFE?FELFELJ&?$
S?FEFEFEFEFEFEFEFF9"<"J)<%
FEFES2FEFFFFFFFEFFFFFFFEFEFFFF9'9.J#B$
FFFEFEFEFEFFFFFEFEFEFEFFFFFFFEFEFEFEFFS#FEFFFEFFFF:%8"8%9%J#A$
FFFFFFFFFFFFFFFFFFFFFFFFFFS#FEFFFEFEFFJ$A$
S9FEFEFFFEFFFFJ$<"9$Jz
S8FEFFFFFFFEFEFFQ*P-FEJ#<)JZ
S7FEFFFEFEFEFEFEFFFFFFQ,P+J#
S6FEFFJ$
S4FEFEFFJ$
S3FEFFFFJ#?"Q
S2FEFFFEJ#?#9"
S1FEFFFEFFFEJ$>$
S/FEFEFFFEFEFFJ$>$
S.FEFFFFFEFFFFJ#?#
S-FEFFFEFFJ#>$
S,FEFFFEFEFFJ$>$
S*FEFEFFFEFFFFJ$=$
S)FEFFFFFEFEFFJ#>$J%J"C"G"
S(FEFFFEFFFFR,FEFEFEFE>FEFEFEJ#=$
S'FEFFFEFEFFJ#=$Jz<z>$
S&FEFFFEFFFFQI3FE4FEFEFFFEJ$<$JZ<ZF%8&:)
S$FEFEFFFEFEFFQK34FEFEFEFEFEFEFEFFFEFEFFFEFEFEFEFFFEJ$<$J%J&8,='
S#FEFFFFFEFFFFR2FFFFFFFF<FEFFFFFFFEFEFEFFFFFFFFFEFFFFFEFFFEFFFFFFFFFEJ#<$J$:":"F"
S"FEFFFEFEFFS'FEFEFEFFFFFFJ#<$J"P"
S!FEFFFEFFFFS&FEFEJ$<#J":"?"<"
RMFEFEFFFEFFS1FEFEFEFEJ$;$J#;*;-
RLFEFFFFFEFEFFS(FEFFFFFEFFFFFEFEFEFEFFFFFEFEFEFFFEFFFEFEFEFEFFJ#<$J"="8%9"9W8"
RKFEFFFEFFFFS)FFFFFFFFFFFFFFFFJ#;$
RJFEFFFEFEFFJ$;$
RHFEFEFFFEFFFFJ$:$
RGFEFFFFFEFEFF=";%9%J#;$
FEFEFEFEFEFEFEFEFER.FEFFFEFFFF<";.Jr":$
FEFEFFFFFFFFFEFFFEFFFFFFFFFER&FEFFFEFEFF;#J':$
FEFFR9FFFFFFFFFEFFFEFFFFJz<z
@QMFEQHFE:#J&Z"Z"Z"Z<#8Z"Z"Z"Z
FEFF:FFFFFFFFFEMFELFEMFEIFFFFFFEMFELFELJ$
RFFEFFFF9#Js"
FEFFR9FEFF:(J$:#
FEFEFEFEFEFFFER2FEFFFFFFFF9'9.J#
FFFFFFFFFEFFFFFEFEFEFEFFFFFFFEFEFEFEFFR#FEFF="8"8%9%J#
FFFFFFFFFFFFFFFFFFFFR#FEFFJ$:%
R9FEFEFFFFFFFFFFJ$9"9"
R8FEFFFFFEFEJ#9$J'
R7FEFFFEFEFFS!FEFEFEFEFEFEJ#9$J%J":"
R6FEFFFEFFFFS#FFFFFFFF;FEFEJ#9#
R5FEFFFEFFJ$9#Jz<zA"
R3FEFEFFFEFFR@3FE4FEFFJ$8$JZ<ZA"8&8&8'8$
R2FEFFFFFEFEFFRA34FEFEFFFEFEFEFEFEFEFEFEFEFEFEFEFFFEFEFFFEJ#9$J'P(:#
R1FEFFFEFFFFT"FEFFFFFFFEFEFEFEFFFFFFFFFEFEFFJ#9#J%J";&<":"
R0FEFFFEFFS*FEFEFEFEDFFFEFEFEFEFEFFFFJ$9#JQJQ
R.FEFEFFFEFFS*IJ$8$J":";"
R-FEFFFFFEFEFFT,FEFEFEJ#9$J%?.
R,FEFFFEFFFFSMFEFEFEFEFFFFFEFEFEFEFFFFFEFEFEFEFFJ#9#JQ8":"8%8Q8"
R+FEFFFEFFT FFFFFFFFFFFFFFJ$9#
R)FEFEFFFEFFJ$8$
R(FEFFFFFEFEFFJ#9$
R'FEFFFEFFFFJ#9#
R&FEFFFEFFJ#9#
R%FEFFFEFFJ$8$
R#FEFEFFFEFEFFJ$8$
R"FEFFFFFEFFFFJ#9#
R!FEFFFEFFJ#9#
R FEFFFEFFJ$8$
QLFEFEFFFEFEFFJ$8$Jz
QKFEFFFFFEFFFFS P+FEJ#9#JZ
QJFEFFFEFFS!P-J#9#
QIFEFFFEFF:$<%9%J$8$
FEFEFEFEFEFEFEFEFEFEFEQ/FEFEFFFEFEFF9&:.Jr#8$
FEFFFFFFFEFEFFFFFFFFFEFFFEFFFFFFFFFEQ'FEFFFFFEFFFF9"J'9#
FFQ=FFFFFFFFFEFFFEFF<#J#
FEFFQAFEFF;$Jz<z
FEFEFE8Q FERGFE;%J&Z"Z"Z=Z"Z"Z"Z"Z
FFFFFFFE7FFFFFFFFFEMFELFEJIFELFEMFELFEL9"J"
FEQBFF@"J'
FEQ4FEFEFEFEFEFE9'9.J$:"
FFFEFEFEFEFFFFFEFEFEFEFFFFFFFEFEFEFEFFQ%FEFFFFFF:%8"8%9%J$
FFFFFFFFFFFFFFFFFFFFFFFFFFQ$FEFEFFJ$9%
Q;FEFFFFFFFFFFFFJ#9"9"
Q:FEFFFEFEJ#8$
Q9FEFFFEFEFFJ$8$
Q7FEFEFFFEFFFFJ$8#
Q6FEFFFFFEFFJ#8$
Q5FEFFFEFEFFJ#8$
Q4FEFFFEFFFFJ$8#
Q2FEFEFFFEFFJ$8#
Q1FEFFFFFEFFJ#8$
Q0FEFFFEFEFFJ#8$
Q/FEFFFEFFFFJ$8#
Q-FEFEFFFEFFJ$8#
Q,FEFFFFFEFFJ#8$
Q+FEFFFEFEFFJ#8$
Q*FEFFFEFFFFJ$8#
Q(FEFEFFFEFFJ(
Q'FEFFFFFFFEFEFFJ#8$
Q&FEFFFEFFFFJ#8#
Q%FEFFFEFFJ$8#
Q#FEFEFFFEFFJ(
Q"FEFFFFFFFEFEFFJ#8$
Q!FEFFFEFFFFJ#8#
Q FEFFFEFFJ$8#
PLFEFEFFFEFFJ(
PKFEFFFFFFFEFEFFJ#8$
PJFEFFFEFFFFJ#8#
PIFEFFFEFF:%;%9%J'
FEFEFEFEFEFEFEFEFEFEFEFEP0FEFFFFFEFEFF9'9.Js&
FEFFFFFFFFFEFEFFFFFFFFFEFFFEFFFFFFFFFEP'FEFFFFFEFFFFJP&
PAFEFFFFFEFF9"J#
FFPDFEFF=#Jz=z
FEFF7P FESFFE<#J&Z"Z=Z"Z"Z"Z"Z"Z
FEFF8FFFFFFFFFEMFEIJFELFELFEMFELFEL;#J&
FEFFP:FEFEFEFEFE:#:"J#;"
FEFFFEP4FEFFFF9'9.J#
FEFEFEFEFEFEFFFEFEFEFEFFFFFFFEFEFEFEFFP%FEFF9S8%9%J$8P
FFFFFFFFFFFFFFFFP$FEFEFFJ&9"
P;FEFFFFFEFEFEJ'
P:FEFFFFFEFFFFJ&
P9FEFFFFFEFFJ'
P7FEFEFFFEFEFFJ'
P6FEFFFFFEFFFFJ&
P5FEFFFFFEFFJ&
P4FEFFFEFEFFJ'
P2FEFEFFFEFFFFJ&
P1FEFFFFFEFFJ&
P0FEFFFEFEFFJ&
P/FEFFFEFFFFJ&
P-FEFEFFFEFFJ&
P,FEFFFEFEFFJ&
P+FEFFFEFFFFJ%
P*FEFEFEFFJ&
P(FEFEFEFFFFJ%
P'FEFFFEFFJ%
P&FEFEFEFFJ%
P%FEFEFFFFJ%
P#FEFEFEFFJ"8"
P"FEFFJ%
P!FEFEFFFFJ$
P FEFEFFJ$
OMFEFEFFJ%
OKFEFEFFFFJ$
OJFEFEFF;#<%9%J$
FEFEFEFEFEFEFEFEFEFEO1FEFEFF;"<.J+
FFFEFFFFFFFFFEFFFEFFFFFFFFFEO(FEFEFEFEFEFEFFFEFFFFJ(
OBFFFFFFFFFEFEFFJ"
OGFFJz<z
@O!FETFFEJ&Z<Z"Z"Z"Z"Z"Z"Z
@FFFFFFFFFEJJFEMFELFELFEMFELFEL
@"J%
FEO7FEFEFEFEB.J'
FFFEFEFEFEFFFFFFFEFEFEFEFFO(FFFFFFFEFFFF<"9"8%9%
FFFFFFFFFFFFFFFFFFFF


























:%;%9%
FEFEFEFEFEFEFEFEFEFEFEFE9'9.
FEFFFFFFFFFEFEFFFFFFFFFEFFFEFFFFFFFFFE

Jz
@UMFEJ&Z"Z"Z"Z"Z"Z"Z"Z
@FFFFFFFFFEMFELFEMFELFELFEMFELFEL
@"
FE9'9.
FFFEFEFEFEFFFFFEFEFEFEFFFFFFFEFEFEFEFF:%8"8%9%B"J"J"J"J"J"J"J"J"
FFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFLFFMFFLFFLFFMFFLFFLFF









J%J#J%J$J"J%J"J&J%
CFEFEFEFEJFEFEJFEFEFEFEJFEFEFEMFEIFEFEFEFELFEJFEFEFEFEFEIFEFEFEFEJ'J"J'J&J"J$J#J%J'
BFEFFFFFFFFFEIFFJFEFFFFFFFFFEHFEFFFFFFFEKFEKFFFFFFKFEFFJFFFFFFFFIFEFFFFFFFFFEJ"J#J#
Q@FFO FEFFOJFEFFJ"J#J&J$J#
P@FFO"FEFFOGFEFEFEFEFEKFEFEFELFEFFJ#J$J#J&J'J'
PDFEFFJFEFEFEIFEFFKFFFFFFFFFEHFEFFFFFFFFFEOGFFFEFEFEFEFFJ#J%J"J#J'
PCFEFFKFFFFFFFEOFFFP!FEFFIFEFFFFFFFFFEJ#J"J#
PBFEFFJFELFEFFJ#J&J"J#
PAFEFFOKFEFEFEFEFEGFEP FEFFJ'J'J'J'J'J'J'
BFFFEFEFEFEFFOFFEFEFEFEFEFEHFFFEFEFEFEFFGFFFFFFFFFEFFGFFFEFEFEFEFFHFFFEFEFEFEFFOGFFFEFEFEFEFFJ%J"JQJ%J"J%J%J"J%
CFFFFFFFFKFFIIFFFFFFFFLFFIFFFFFFFFJFFFFFFFFJFFLFFFFFFFF



ENDBITMAP
%%EndBinary
0 0 0 0 1 1 1 K
0 16 Q
7 X
0 0 0 0 1 1 1 K
(%) 570.36 335.89 T
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(% impr) 0 -270 134.09 408.73 TF
(ovement) 0 -270 134.09 460.6 TF
(Ntask) 350.76 279.93 T
92.7 259.93 697.67 720.72 C
0 180 792 792 C
581.89 192.1 700.69 255.1 R
7 X
0 0 0 1 0 0 0 K
V
581.89 195.42 700.69 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
581.89 195.42 700.69 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 589.71 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
95 224 295 239 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 95 231 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 2
%%Page: "5" 3
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(5 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
92.16 678 703.1 696 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
92.16 678 703.1 696 R
7 X
0 0 0 1 0 0 0 K
V
92.16 687 713.16 687 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Case Study #2) 92.16 704 T
3 18 Q
(Results) 92.16 659 T
5 12 Q
(n) 120.96 620.33 T
0 16 Q
0.83 0.16 (T) 139.39 620.33 B
0.83 0.16 (ests wer) 147.89 620.33 B
0.83 0.16 (e r) 207.49 620.33 B
0.83 0.16 (un on an SS1000 \0508 - 50 Mhz CPUs, 512 Mb RAM\051.) 226.65 620.33 B
4 14 Q
0.73 0.14 (Figur) 95.8 599.93 B
0.73 0.14 (e 1) 128.15 599.93 B
0 10 Q
0.52 0.1 (Or) 145.24 599.93 B
0.52 0.1 (der and time) 157.07 599.93 B
92.16 257.05 703.1 720 C
114.37 258.49 680.89 596.6 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  8758     
531 304 538 322 0 146.31 277.65
/red <
00000000000000000100000006000000160000000600000000E1F50506000000
0600000000002E3006000000060000000600000001000000FCFFFF7F00000000
FFFFFF7F94780B000000000000000000FF070000FFFFFFFFE8EFFFEF39000000
E09F020038F0FFEF00C408004200000001000000030000000300000003000000
00C408000400000003000000030000000000000000000000200A090014F0FFEF
01000000E8EFFFEFECEFFFEFFBFFFF7F88F0FFEF09000000000000005AF20800
FFFFFF7F00000000FFFFFF7F00000000E01B020070EFFFEF8E780B00D4F0FFEF
100A09000000F03F020000007300000000000000CCF0FFEF01000000000000FF
> store
/green <
05000000000000000000000017A10D4400F2FFEF00F2FFEF00F40800FFFFFFFF
01000000000000000000000000000000006B0900FCF1FFEF00F2FFEF06000000
00000000000000000000000038F5080018520B00E0000000FC00000011000000
0700000038F508000000000038F50800000000000000000000F8080064280900
42000000000000009CF0FFEF0000000078B30800A0F0FFEF1CE30100A0F0FFEF
60280900A9FC08006B000000630000000078070038F508000078070038F50800
0078070038F508000078070038F5080000000000000000000700000007000000
07000000010000000000000096780B000700000000C4080078B30800160000FF
> store
/blue <
0F00000065430B0038F5080000780700A4FC0800007807000CF2FFEF000000A0
CDCCCC3D0000000000F2FFEF74000000ECD2010010F2FFEF0000000070000000
700000000000000054AA08000100000018520B00E0000000FC00000011000000
0700000008000000FFFFFFFFFFFFFFFF0C00000033131D43000000A000000000
00000000000000A010B20800000000005CDF0100A0F1FFEF92420B0001000000
000000A0A4FC080060A9080000F2FFEF00C40800040000000200000008000000
000000000000000014F0FFEF00C40800FCF1FFEF59F10800100A090001000000
100A090076780B000400000000C4080010B2080040F1FFEFA879020040F100FF
> store
 BEGINBITMAPCOLORc



<$9%
FEFEFEFEFEFEFE;&9$
FEFFFFFFFEFFFFFF;"
FF>)>z
FEFFFFFEFEFEFEFEU'FE=$8&=&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W
FEFEFEFFFFFFFFFEFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE=&
FFFFFFFEFF;"
FEA"
FE;-
FFFEFEFEFEFFFFFEFEFEFEFF<%8%
FFFFFFFFFFFFFFFF

















J'
U;FEFEFEFEFEFEJ%
U<FFFFFFFF



J%
U<FEFEFEFEJ'
U;FFFEFFFEFFFF
J#
U;FEFF<$9%
FEFEFEFEFEFEFE;-J#
FEFFFFFFFEFFFEFFFFFFFFFEU)FEFF;"
FF>#
FEFF=$Dz
FEFEFEU&FE=%C&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"R&
FFFFFFFEFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFF;"J#
FEU2FEFFJ"
U>FF;-J%
FFFEFEFEFEFFFFFEFEFEFEFFU+FEFEFEFE<%8%J#
FFFFFFFFFFFFFFFFU'FEFF
J#
U6FEFFJ%
U<FFFFFFFFJ$
U<FEFFFEJ#
U5FEFFJ#
U;FEFFJ#
U4FEFFJ#
U:FEFF
J#
U3FEFFJ#
U9FEFFJ#
U2FEFFJ#
U8FEFF
J":#
U2FFFEFF
J";#
U0FEFEFF
J#
U5FEFFJ#
U/FEFF
J#:#
U.FEFFFEFF
J#
U3FEFFJ#
U-FEFFJ#
U2FEFFJ#
U,FEFFJ"
U2FF<%8%
FEFEFEFEFEFEFEFE;'8$J#
FEFFFFFFFFFEFFFFFFTIFEFFJ"
U0FE;";&J#
FFFEFEFEFEFETHFEFF?)=z8w
FEFFFEFFFFFFFFFETFFEFE>%B&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W"P)W
FEFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFEFFFE=#J#9#
FEFFU FEFFFEFF<#9"
FEFFFE;-J#9#
FEFEFEFEFEFEFFFEFEFEFEFFTEFEFFFEFF;V
J#
U,FEFFJ#
U'FEFF
J#9#
U&FEFFFEFF
J#
U*FEFFJ#
U%FEFFJ#
U)FEFFJ"
U%FFJ#Jz
U(FEFFLQ+FEJZ
V)Q)J"
U#FEJ#
U'FEFFJ#
U"FEFFJ#
U&FEFF
J#8#
U!FEFFFEFF
J#9"
U FEFFFF
J#
TMFEFFJ"
U#FEJ%J%D"
VEFEFEFEFE;FEFEFEFEFEJ#8#J$
TLFEFFFEFFP3FFFFFFJ'Jz<z
THFEFEFEFEFEFEO04FE4FEJ%8#JZ<ZA&928&
TIFFFFFFFFFEFFO-44FEFEFEFEFEFEFFFEFFFEFEFEFFFEFFFEFEFEFEFEFFFEFEFFFEFEFEJ%J%P"9'8(:&
VEFFFFFFFF<FEFEFEFEFEFEFFFFFFFEFFFEFEFFFFFFFFFEFEFFFFFFFEJ#J$@"=";":"
U FEFFP5FFFFFFFFFFFFFF
<%8%J'J"
FEFEFEFEFEFEFEFET9FEFEFEFEFEFFQ#FE;-J&J(B'
FEFFFFFFFFFEFEFFFFFFFFFET7FFFEFFFFFFP;FFFEFEFEFEFEFFFFFEFEFEFEFFJ#J":P9":"8"8Q8":"
THFEFFP:FFFFFFFFFFFF;"Hz":"z
FFT0FEFFFF>FE?#C&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"W"W"W"W#8%P"W"W
FEFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFEFEFEFEFEFE>#
FEFF=#J#
FEFFT=FEFF<#
FEFF;-J"8%
FEFEFEFEFEFEFFFEFEFEFEFFT5FFFFFFFFFF;VJ"
T9FEJ"9#
TDFEFEFFJ#
TCFEFFJ#
TGFEFFJ#
TBFEFFJ#
TFFEFFJ#
TAFEFFJ"
TFFFJ#
T@FEFFJ"J'
TDFEOMFEFEFEFEFEFEJ#8#J%J&
T?FEFFFEFFP FFFFFFFF<FEFEFEFEFEJ#J"P"
T>FEFFPDFEFEJ#Jz<z;#;#
TBFEFFO:4FE4FEFEFFFFFEJ#JZ<ZC"
T=FEFFO?44FFJ#
TAFEFFJ#J%
T<FEFFP'FEFEFEFEJ#JQJ"
T@FEFFP"AFEJ#8#J#;#
T;FEFFFEFFPBFFFEFEFFJ(
W6FFFEFEFEFEFEFFJ#8#JP
T:FEFFFEFFPEJ#
T9FEFFJ#
T=FEFFJ"
T9FFJ#
T<FEFFJ"9#
T7FEFEFF
J#8#
T6FEFFFEFF
J#8#
T5FEFFFEFF=#9%J#
FEFEFEFEFEFET$FEFF=";$J"
FFFFFFFFT)FFJ#
T3FEFFA&J"
FEFEFEFEFET'FEB&=z8z
FFFFFFFFFESMFEO%FEA"B&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"W"W"Q(W"W"W"W
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFEFFFEFEFEFEJ#8#
T1FEFFFEFFA"J&F"9$A"8"J"
FEW+FEFEFEFEFEFEFEFFFEFEFE>FEA'J#8#J#J"P"
FFFEFEFEFEFFSMFEFFFEFFP0FEFE<FEFE>"9%Jz#8#z;#;#D"
FFFFFFFFFFV 4FEFFFEFEFF4FEFEFFFFFEFFJ#8#JZ<ZC"9">$8$8$<$9$8)9'8%:#
T/FEFFFEFFOI44FFFEFEFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFEFEFEFEFEFEFEFEFEFEFFFEFEFEFEFEFEFEJ#8#J"8"J#8#8#:*;$8&8#P)8'8%
T.FEFFFEFFP1FFFFFFFFEFEFEFEFFFFFEFFFEFEFFFFFFFEFFFEFFFEFFFFFFFEFEFEFEFFFEFFFFFFFFFEFEFEFFFFFFFEFEFFFFFEJ#J"D"<(="9"9"8%
VFFFFFO+FFFFFFFEFEFEFEFEFEFFFFFFFFFEFFFFJ#8#J"<#8#JQH#
T-FEFFFEFFQ*FEFEFFFEFFAFFFEJ#;#:#8#J":"<"9"9"8%
W5FFFEFEFFFFFEFFFECFEFEFEFEFEFEFFFFFEJ&9#J(="9"J/8'8%
T(FEFEFEFEFEFEFFQ$FFFEFEFEFEFEFFFFFFAFFFFFEFEFEFEFFFFFFFEFEFEFEFFFFFFFEFEFEFFFFFEFEFFJ%JP="9":"9$:"<"8":$9%9Q9P8#
T)FFFFFFFFQ*FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFJ#
T/FEFFJ#
T.FEFF
J'
T)FEFEFEFEFEFFJ%
T)FFFFFEFFJ#8$
T'FEFFFFFFFFJ(
T&FEFFFFFEFEFEFE
J#
T%FEFFJ#
T$FEFFJ#:%Jz
T#FEFFFFFFFFFFOJQ)FEJ#:"8"JZ
T"FEFFFEFEOJQ+J#
T'FEFFJ#9#
T!FEFFFEFFJ#9#
T FEFFFEFFJ#9#
SMFEFFFEFFJ"9#
SMFFFEFF
J":#
SKFEFEFFJ#9#
SJFEFFFEFFJ#9#
SIFEFFFEFF=#9%J#
FEFEFEFEFEFES=FEFF="9'J#9"
FFFEFFFFFFFFFES7FEFFFFJ#8"
SGFEFFFEJ#
SFFEFFJz8z
8S3FEO?FEJ&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W"W"W"W"P)W"W"W"W"W"W
8FFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFEFFFFFEFEFEFEFEFEJ#8#
SDFEFFFEFFJ#8#
SCFEFFFEFFA'J#8#
FFFEFEFEFEFFS1FEFFFEFF>"9%J#8#
FFFFFFFFFFS1FEFFFEFF
J#8#
S@FEFFFEFFJ"8#
S@FFFEFFJ"9#
S>FEFEFFJ#8#
S=FEFFFEFFJ#
S@FEFFJ#8"
S<FEFFFFJ(
S6FEFEFEFEFEFEFFJ%9"
S7FFFFFFFFFEJ#
S=FEFFJ#
S<FEFFJ"
S<FF
J'
S5FEFEFEFEFEFEJ$:"
S4FEFFFFFFJ#
S3FEFFJ$
S1FEFEFFJ#9"P
S0FEFFFEJ#8$
S/FEFFFEFEFFJ#9#
S.FEFFFFFFJ$8"
S,FEFEFFFEJ$8#
S+FEFFFFFEFFJ#8$
S*FEFFFEFEFFJ#8$
S)FEFFFEFFFFJ#8#
S(FEFFFEFFJ$8#
S&FEFEFFFEFFJ'
S&FFFFFFFEFEFFJ"9$
S$FEFEFFFFJ#8#
S#FEFFFEFFB%J#8#
FEFEFEFER@FEFFFEFFC$J(
FFFFFFR>FEFEFFFFFEFEFFJ'
RMFEFFFFFFFEFFA&>z
FEFEFEFEFEU&FEB&=&W"W"W"W"W"W"V"W"W"W"W"W"W"W"W/W"W"W"W"W"W"W"W"W
FFFFFFFFFEFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFEFFFFFFFEFFFFFFFEFEFEFEFEFEFEFEFEA"Js&
FFR7FEFFFFFEFEFFJP'
RDFEFFFFFEFFFFA"J#
FER?FEFFA'J#
FFFEFEFEFEFFR9FEFFB%J"
FFFFFFFFR:FFJr
RBFEJ%;"
R@FEFEFFFFFFJ%
R>FEFEFFFFJ(J"
R<FEFEFFFFFFFEFEPIFFJ'SJ#
R;FEFFFFFFFEFEPBFEFEJ(;"J"8"
R:FEFFFFFEFEFFFFFEPCFEFEJ)J"
R7FEFEFEFFFEFEFFFFPIFEJ)J(8"
R5FEFEFFFFFEFEFFFFPGFEFEFEFEFFFFFFFFJ)J(9#
R3FEFEFFFFFEFEFEFFPFFEFEFEFFFFFFFFFFFFJ)J(>"
R1FEFEFFFFFEFEFFFFPDFEFEFEFEFFFFFFFEJ)J)
R/FEFEFFFEFEFEFFFFPBFEFEFEFEFFFFFEFFJ(J)
R.FEFFFEFEFFFFFFP@FEFEFEFEFFFFFFFFJ&J";)
R-FEFEFEFFFFP9FEFEFEFEFEFFFFFFFFJ*8#J,
R#FEFEFEFEFEFEFFFEFEFFFFP:FEFEFEFFFEFEFEFFFEFFFFJ'9"J"9%
R$FFFFFFFFFEFEFFP;FEFEFFFFFFJ#J'9"
R*FFFFP8FEFEFEFEFEFFFFJ"J(P#
R)FFP5FEFEFEFEFEFFFEFEFFJ$J"C'P="
R FEFEFEP(FFFEFEFEFEFEFEFFJ$9'J"=&Q
QJFEFEFEFFFEFEFEFEFEP$FEFEFEFEFEFEJ$8#TJ/
QGFEFEFEFFFEP!FEFEFFFEFFFEFEFEFEFEFFFFFFFFJ$8$J"8"R
QDFEFEFEFFFFFFP+FEFEJ)Jr"
QAFEFEFEFEFFFFFFFFP'FEFFJ$8$J"ErR%
Q=FEFEFEFFFFFFOBFEFEFEFFFEFFJ'9)J%=r(=$
Q1FEFEFEFEFEFEFEFEFEFEFFFFFEFFOCFEFFFFFEFEFFFFFFFEFFFFFFFFFEFFJ-J"J&rRE#
Q2FFFFFFFFFEFEFEFEFEFFFFFFO(FF=FEFFFEFEFFFEFFFEJ%J"Jr#8)
Q7FFFFFFFFO+FE6FEFFFEFEFFFFFFFFFEFFFFJ'J"J$=y*8#
Q+FEFEFEFEFEFEDFE=FEFEFEFEFFFFFFFEFFFFFFFEFFFFFEJ"J'BtQ#J%Ir#9-T='
P!FF<FEFEFEFFFEFEFEFEFE@FEFEFFFEFEFFFEFEFFFEFEFEFEFEFFFFFFFFFEFFFEFFFFFEFFB%J(J'J%;s*=$J"8#zT9RJ%
FEFEFEFEIFEFEFEFFFEFEFE:FEFEFEFFFEFE;FFFFFEFFFEFFFFFFFFFEFFFFFFFFFFFEFE=FEFEFF3FE6FFFFFEFFA'J%J"J'8)S?)8#z":%W$?$J"
FEFFFFFFFFFEIFFFFFEFF>FF7FEFEFEFEFEFEFEFEFEFFFEFEFEFEFEFEFEFEFEFEFFFEFEFF;FEFFFFFFFFFEFEFFFFFFFEFF?FFJ%Dy%z<#9#9zQ:#T"W*J"
O-FEFEFEFFFEFFFEFEFF5FEFFFEFEFF1FEFFFEFEFEFFFFFFFFFEFFFEFF>FFJz":#xC#8#J#9#Jr$z"z
8AFEFFFEFFFEFFFEFEFF:FEFFFFFE4FEFFFEFF?FEFFQ7FEJ&Z$8#Z#8#Z'Z"Z"Z"Z
8FFFFFFFFFE<FEFEFFFFFE:FEFFFFFE:FEFEFFFEFFFE>FEO1FEO2FEO2J%J%JQJ#
O-FEFFFFFE<FEFFFFFE;=FEFFJ$8#J'
O+FFFFFFFFFF:FFFFFEFFFFFFJ#
P FFFEA'A"J"J"J"J"J"
FFFEFEFEFEFFFFO2FFO1FFO2FFO2FFO2FFB%
FFFFFFFF








J%J%8%J"9%J":%J%8%J#:%8%
:FEFEFEFEO,FEFEFEFEFEFEFEFEO+FEFEFEFEFEO*FEFEFEFEFEO(FEFEFEFEFEFEFEFEO&FEFEFEFEFEFEFEFEFEFEJ'J-J"9'J#9'J-J":-
9FEFFFFFFFFFEO*FEFFFFFFFFFEFEFFFFFFFFFEO)FEFEFFFFFFFFFEO(FEFFFEFFFFFFFFFEO&FEFFFFFFFFFEFEFFFFFFFFFEO%FFFEFFFFFFFFFEFEFFFFFFFFFEJ#J#
Q/FEFFO0FEFFJ"J$
OIFFPFFEFEFEJ#J#J'J'
OMFEFFO-FEFFO0FEFFFFFFFFFEO-FFFEFEFEFEFFJ#J'
OLFEFFR%FEFFFFFFFFFEJ#J#
OKFEFFO.FEFFJ#J&
OJFEFFO0FEFEFEFEFEJ'J-J.J.J-J-
9FFFEFEFEFEFFO*FEFEFEFEFEFEFFFEFEFEFEFFO&FFFFFFFFFEFFFFFFFEFEFEFEFFO&FFFEFEFEFEFFFFFFFEFEFEFEFFO&FFFEFEFEFEFFFFFEFEFEFEFFO*FFFEFEFEFEFFFFFEFEFEFEFFJ%JVJ"9%J%9%J%8%J":%8%
:FFFFFFFFO+O+FFFFFFFFFFO(FFFFFFFFFFFFFFFFO(FFFFFFFFFFFFFFFFO'FFFFFFFFFFFFFFFFFF




ENDBITMAP
%%EndBinary
0 16 Q
(time \050seconds\051) 0 -270 136.02 407.24 TF
(N \050or) 282.13 265.61 T
(der of matrix\051) 319.52 265.61 T
92.16 257.05 703.1 720 C
0 180 792 792 C
586.49 192.1 705.29 255.1 R
7 X
0 0 0 1 0 0 0 K
V
586.49 195.42 705.29 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
586.49 195.42 705.29 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 594.31 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
95 225 295 240 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 95 232 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 3
%%Page: "4" 4
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(4 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.76 676.42 702 694.42 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.76 676.42 702 694.42 R
7 X
0 0 0 1 0 0 0 K
V
95.76 685.42 716.76 685.42 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Case Study #2) 95.76 702.42 T
3 18 Q
(Solution) 95.76 657.42 T
0 16 Q
0.16 (1.) 153.36 618.75 S
0.83 0.16 (Build a data dependency graph.) 174.96 618.75 B
0.16 (2.) 153.36 592.35 S
0.83 0.16 (Look for concurr) 174.96 592.35 B
0.83 0.16 (ency in the solution pr) 297.96 592.35 B
0.83 0.16 (ocess.) 463.5 592.35 B
0.16 (3.) 153.36 565.95 S
0.83 0.16 (Thr) 174.96 565.95 B
0.83 0.16 (ead the parts that ar) 200.59 565.95 B
0.83 0.16 (e concurr) 348.62 565.95 B
0.83 0.16 (ent.) 416.81 565.95 B
3 18 Q
(Data Dependency Graph) 95.76 519.82 T
95.76 257.63 702 718.42 C
219.78 261.05 577.98 513.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
257.22 463.42 306.17 488.62 12.6 RR
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
421.61 386.38 470.57 411.58 12.6 RR
2 H
N
257.22 292.06 306.17 317.26 12.6 RR
N
508.49 386.38 557.45 411.58 12.6 RR
0.5 H
N
334.73 386.38 383.69 411.58 12.6 RR
2 H
N
257.22 386.38 306.17 411.58 12.6 RR
N
322.72 401.93 334.26 398.62 322.72 395.31 323.92 398.62 4 Y
V
306.18 398.62 323.92 398.62 2 L
0.5 H
N
409.12 401.93 420.65 398.62 409.12 395.31 410.32 398.62 4 Y
V
383.21 398.62 410.32 398.62 2 L
N
495.52 401.93 507.05 398.62 495.52 395.31 496.72 398.62 4 Y
V
470.33 398.62 496.72 398.62 2 L
N
408.92 393.13 419.93 397.9 413.12 388.02 411.95 391.34 4 Y
V
306.18 304.3 411.96 391.34 2 L
N
497.45 406.54 507.05 399.34 495.09 400.36 497.39 403.02 4 Y
V
304.74 476.38 497.4 403.02 2 L
N
0 10 Q
(c) 279.54 474.19 T
(K) 278.1 394.99 T
(t) 279.54 301.37 T
(b) 356.57 394.27 T
(A) 443.11 396.43 T
(x) 529.25 396.43 T
95.76 257.63 702 718.42 C
0 180 792 792 C
581.89 192.1 702.33 255.1 R
7 X
0 0 0 1 0 0 0 K
V
581.89 195.42 702.33 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
581.89 195.42 702.33 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 589.71 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
94.75 226.25 294.75 241.25 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 94.75 233.25 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "3" 5
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(3 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
93.6 676.42 700.55 694.42 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
93.6 676.42 700.55 694.42 R
7 X
0 0 0 1 0 0 0 K
V
93.6 685.42 714.6 685.42 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Case Study #2) 93.6 702.42 T
5 12 Q
(n) 122.4 655.75 T
0 16 Q
0.83 0.16 (The system of equations looks like:) 140.83 655.75 B
5 12 Q
(n) 122.4 520.06 T
0 16 Q
0.83 0.16 (This can be r) 140.83 520.06 B
0.83 0.16 (e-written as:) 234.92 520.06 B
3 18 Q
(The Next Problem) 93.6 428.33 T
0 16 Q
0.16 (1.) 151.2 389.66 S
0.83 0.16 (Computing) 172.8 389.66 B
0.83 0.16 ( is an) 270.78 389.66 B
0.83 0.16 ( operation \050) 348.46 389.66 B
4 F
0.83 0.16 (N=100, 100 million operations) 433.63 389.66 B
0 F
0.83 0.16 (\051.) 639.8 389.66 B
0.16 (2.) 151.2 363.26 S
0.83 0.16 (Computing) 172.8 363.26 B
0.83 0.16 ( is an) 275.72 363.26 B
0.83 0.16 ( operation.) 353.4 363.26 B
0.16 (3.) 151.2 336.86 S
0.67 0.16 (Computing the) 172.8 336.86 B
0.67 0.16 ( matrix pr) 302.83 336.86 B
0.67 0.16 (oduct is an) 375.98 336.86 B
0.67 0.16 ( operation \050) 494.61 336.86 B
4 F
0.67 0.16 (N=100, 1 million) 579.45 336.86 B
0.16 (operations) 172.8 318.46 S
0 F
0.16 (\051.) 241.05 318.46 S
0.16 (4.) 151.2 292.06 S
0.83 0.16 (In addition, ther) 172.8 292.06 B
0.83 0.16 (e ar) 292.24 292.06 B
0.83 0.16 (e thr) 319.4 292.06 B
0.83 0.16 (ee other) 353.26 292.06 B
0.83 0.16 ( operations.) 450.25 292.06 B
93.6 256.91 700.55 718.42 C
99.6 541.13 694.55 650.42 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(a) 218.68 597.82 T
6 12 Q
(r) 226.22 591.72 T
6 14 Q
(T) 231.71 597.82 T
6 12 Q
(r) 240.03 591.72 T
6 14 Q
(x) 249.36 597.82 T
1 F
(\050) 244.69 597.82 T
(\051) 255.57 597.82 T
6 12 Q
(r) 206.4 580.13 T
7 24 Q
(\345) 200.17 593.12 T
7 14 Q
(l) 275.13 597.82 T
6 F
(b) 336.98 597.82 T
6 12 Q
(r) 344.51 591.72 T
(s) 349.89 591.72 T
6 14 Q
(T) 355.38 597.82 T
6 12 Q
(r) 363.69 591.72 T
6 14 Q
(x) 373.02 597.82 T
1 F
(\050) 368.36 597.82 T
(\051) 379.24 597.82 T
6 F
(T) 384.73 597.82 T
6 12 Q
(s) 393.04 591.72 T
6 14 Q
(y) 402.37 597.82 T
1 F
(\050) 397.71 597.82 T
(\051) 408.59 597.82 T
6 12 Q
(s) 324.69 580.13 T
7 24 Q
(\345) 318.47 593.12 T
6 12 Q
(r) 306.18 580.13 T
7 24 Q
(\345) 299.95 593.12 T
6 14 Q
(a) 448.57 597.82 T
6 12 Q
(r) 456.11 591.72 T
6 14 Q
(T) 461.6 597.82 T
6 12 Q
(r) 469.91 591.72 T
6 14 Q
(y) 479.24 597.82 T
1 F
(\050) 474.58 597.82 T
(\051) 485.46 597.82 T
6 12 Q
(r) 436.28 580.13 T
7 24 Q
(\345) 430.06 593.12 T
6 14 Q
(y) 505.59 597.82 T
(d) 498.59 597.82 T
7 24 Q
(\362) 283.64 591.14 T
1 14 Q
(+) 263.73 597.82 T
6 F
(c) 552.21 597.82 T
6 12 Q
(r) 558.95 591.72 T
6 14 Q
(T) 564.45 597.82 T
6 12 Q
(r) 572.76 591.72 T
6 14 Q
(x) 582.09 597.82 T
1 F
(\050) 577.43 597.82 T
(\051) 588.31 597.82 T
6 12 Q
(r) 539.92 580.13 T
7 24 Q
(\345) 533.7 593.12 T
1 14 Q
(=) 518.8 597.82 T
298.61 581.32 294.41 581.32 294.41 611.62 3 L
0.63 H
2 Z
N
294.41 611.62 298.61 611.62 2 L
N
413.9 581.32 418.1 581.32 418.1 611.62 3 L
N
418.1 611.62 413.9 611.62 2 L
N
428.72 581.32 424.52 581.32 424.52 611.62 3 L
N
424.52 611.62 428.72 611.62 2 L
N
490.77 581.32 494.97 581.32 494.97 611.62 3 L
N
494.97 611.62 490.77 611.62 2 L
N
93.6 256.91 700.55 718.42 C
0 180 792 792 C
93.6 256.91 700.55 718.42 C
99.6 442.73 694.55 514.73 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 14 Q
0 X
0 0 0 1 0 0 0 K
(I) 359.07 478.73 T
7 F
(l) 379.4 478.73 T
8 F
(b) 387.92 478.73 T
(t) 395.74 478.73 T
1 F
(+) 368.01 478.73 T
7 F
(\050) 353.06 478.73 T
(\051) 400.28 478.73 T
6 F
(x) 408.1 478.73 T
(c) 436.21 478.73 T
1 F
(=) 421.31 478.73 T
409.5 486.43 412.92 486.43 2 L
0.63 H
2 Z
N
437.61 486.43 441.02 486.43 2 L
N
93.6 256.91 700.55 718.42 C
0 180 792 792 C
260.78 384.16 270.78 401.16 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 14 Q
0 X
0 0 0 1 0 0 0 K
(b) 261.78 389.66 T
0 180 792 792 C
310.16 384.16 348.46 408.51 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(O) 311.16 389.66 T
(N) 325.93 389.66 T
1 12 Q
(4) 335.8 398.51 T
1 14 Q
(\050) 321.26 389.66 T
(\051) 341.8 389.66 T
0 180 792 792 C
260.78 357.76 275.72 374.76 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 14 Q
0 X
0 0 0 1 0 0 0 K
(t) 269.83 363.26 T
0 180 792 792 C
315.1 357.76 353.4 382.11 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(O) 316.1 363.26 T
(N) 330.86 363.26 T
1 12 Q
(2) 340.73 372.11 T
1 14 Q
(\050) 326.2 363.26 T
(\051) 346.73 363.26 T
0 180 792 792 C
288.11 331.36 302.83 348.36 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 14 Q
0 X
0 0 0 1 0 0 0 K
(b) 289.11 336.86 T
(t) 296.94 336.86 T
0 180 792 792 C
456.31 331.36 494.61 355.71 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(O) 457.31 336.86 T
(N) 472.08 336.86 T
1 12 Q
(3) 481.95 345.71 T
1 14 Q
(\050) 467.42 336.86 T
(\051) 487.95 336.86 T
0 180 792 792 C
411.95 286.56 450.25 310.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(O) 412.95 292.06 T
(N) 427.72 292.06 T
1 12 Q
(2) 437.59 300.91 T
1 14 Q
(\050) 423.05 292.06 T
(\051) 443.59 292.06 T
0 180 792 792 C
580.31 192.1 700.55 255.1 R
7 X
0 0 0 1 0 0 0 K
V
580.31 195.42 700.55 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
580.31 195.42 700.55 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 588.12 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
95.49 224.61 295.49 239.61 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 95.49 231.61 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 5
%%Page: "2" 6
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
94.75 189 585.75 210.12 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
(Unclassi\336ed) 94.75 203.45 T
(2 of 7) 345.73 203.45 T
1 F
(3\24531\24594) 537.6 203.45 T
98.46 220.42 571.67 220.42 2 L
7 X
V
7 H
2 Z
4 X
N
579.83 188.32 697.19 251.32 R
7 X
V
93.88 225.37 293.88 240.37 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
580.31 192.1 697.67 255.1 R
V
580.31 195.42 697.67 245.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
580.31 195.42 697.67 245.1 R
7 X
0 0 0 1 0 0 0 K
V
0 -103 -77 14 -33 111.71 42.01 588.12 199.8 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun Logo Sm.eps)%%CreationDate: (6/2/92) (3:10 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: -103 -77 14 -33%AI3_ColorUsage: Black&White%AI3_TemplateBox: 26.75 111.25 26.75 111.25%AI3_TileBox: -345.25 -235.75 206.75 494.25%AI3_DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 Au0 To1.0004 0 0 0.9442 -54.1466 -74.109 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TO0 G0.0265 w-25.7495 -61.9176 m-25.7762 -61.6514 -25.8734 -61.6564 -26.1808 -61.7681 c-26.7284 -61.9672 -28.968 -64.1075 -29.9801 -64.7544 c-30.6318 -65.1712 -31.9046 -65.2189 y-36.4836 -65.2189 -37.5295 -61.5027 -37.5295 -60.4741 c-37.5295 -49.6904 l-37.5295 -49.0931 -37.8273 -48.9439 -38.0935 -48.8276 c-38.408 -48.8113 -38.9721 -48.8609 v-39.6005 -48.9164 -39.6025 -48.3799 y-39.6522 -47.7991 -39.6689 -47.6 v-39.7365 -46.7893 -38.6735 -46.7373 y-35.4882 -46.5382 -33.1827 -45.7746 y-31.9882 -45.3764 -31.8887 -46.2391 -31.9551 -46.405 c-32.0342 -46.6024 -32.0374 -48.1968 -32.1037 -48.5285 c-32.1037 -58.2189 l-32.0705 -59.6282 -31.3737 -61.1213 -29.2169 -61.1213 c-27.0603 -61.1213 -25.8658 -59.6282 -25.7662 -58.9977 c-25.7691 -49.674 l-25.7691 -49.0767 -26.0648 -48.8941 -26.3135 -48.7945 c-27.309 -48.7449 -28.2215 -48.8445 v-28.9831 -48.9275 -28.9847 -48.2304 y-28.9348 -47.7494 -28.9356 -47.4509 v-28.9372 -46.7508 -28.3211 -46.6378 y-24.3559 -46.8036 -21.6683 -45.6259 y-20.4738 -45.2278 -20.026 -46.4223 -20.1419 -46.754 c-20.2367 -47.0243 -20.3577 -48.9936 -20.3413 -49.5245 C-20.3246 -61.104 l-20.2582 -61.6349 -20.2914 -62.1167 -20.0923 -62.2495 c-19.8932 -62.3821 -19.5091 -62.3782 -18.8646 -62.5645 c-18.2342 -62.7471 -18.0892 -62.9468 -18.1346 -63.809 c-18.1842 -64.7544 -18.5659 -64.8375 -18.931 -64.7711 c-19.296 -64.7048 -20.5236 -64.738 -21.1541 -64.6716 c-21.7845 -64.6053 -23.4103 -64.6716 -24.439 -64.8043 c-25.4676 -64.937 -25.9154 -64.738 -25.8485 -64.0744 c-25.8174 -63.7677 -25.7993 -63.8917 -25.7497 -63.2613 c-25.7242 -62.9364 -25.733 -62.0835 -25.7495 -61.9176 cb-10.2212 -47.1849 mB-41.3943 -49.9725 mB-53.8867 -59.4787 m-53.8867 -59.1636 -53.273 -58.9146 -52.9743 -58.9146 c-52.6758 -58.9146 -52.7919 -58.8815 -52.4934 -58.9478 c-52.1947 -59.0141 -51.7634 -59.23 -51.697 -59.6945 c-51.6307 -60.159 -51.6917 -60.6403 -51.2157 -61.37 c-50.4694 -62.5149 -49.0591 -62.6805 -48.1963 -62.7137 c-47.1765 -62.753 -46.317 -62.5401 -45.8902 -62.1 c-45.3592 -61.5524 -45.2653 -60.9543 -45.2265 -60.3082 c-45.1769 -59.4787 -45.3759 -58.7487 -45.9233 -58.4501 c-46.279 -58.256 -47.3668 -57.8364 -48.0305 -57.6373 c-48.6941 -57.4383 -51.6639 -56.4096 -52.2444 -55.9615 c-52.7331 -55.5847 -54.4343 -55.0983 -54.5338 -51.7139 c-54.6334 -48.3294 -51.9457 -46.6545 -51.5476 -46.389 c-51.1494 -46.1236 -49.3412 -45.3105 -46.5872 -45.2774 c-43.8332 -45.2442 -42.1784 -45.9559 -41.7593 -46.1236 c-41.2616 -46.3227 -40.9723 -46.7997 -41.0957 -47.3513 c-41.3115 -48.3135 -41.341 -48.6124 -41.3943 -50.0548 c-41.4107 -50.5035 -41.8588 -50.7689 -42.837 -50.6852 c-43.2007 -50.654 -43.4351 -50.2717 -43.4682 -49.9227 c-43.512 -49.4603 -43.6174 -48.7454 -43.8497 -48.4959 c-44.0321 -48.3 -44.2977 -47.6168 -46.471 -47.6168 c-48.462 -47.6168 -49.0322 -48.8131 -49.1254 -49.8399 c-49.1917 -50.5698 -48.9595 -51.3171 -48.0636 -51.9302 c-47.0911 -52.5959 -43.7501 -53.4234 -42.7547 -53.738 c-41.9374 -53.9961 -39.7684 -55.166 -39.9675 -58.3341 c-40.1321 -60.9501 -41.097 -62.0262 -42.4228 -63.1944 c-43.8164 -64.4221 -45.6152 -64.8147 -45.8737 -64.9039 c-47.4664 -65.4513 -51.7026 -65.3095 -52.7752 -65.0531 c-53.5384 -64.8707 -54.1853 -64.7212 -54.0693 -63.5766 c-53.9697 -62.5948 -53.8867 -60.1442 -53.8867 -59.4787 cb-10.1221 -60.7894 m-10.1221 -50.6031 l-10.1381 -50.6031 -10.0741 -50.1674 -9.0432 -49.873 c-7.185 -49.3421 -3.6805 -48.7043 -3.8 -53 c-3.8165 -53.5973 -3.5927 -60.7812 -3.7917 -62.3076 c-3.9694 -63.6687 -3.9012 -64.0752 -3.7846 -64.3066 c-3.701 -64.4726 -3.4853 -64.9535 -1.9929 -64.7048 c-0.2542 -64.415 2.057 -64.6586 2.951 -64.8027 c3.6818 -64.9203 3.9465 -64.3562 3.9133 -63.4936 c3.8801 -62.6309 3.3792 -62.4779 2.6365 -62.3654 c2.0891 -62.2826 1.9896 -61.8013 1.9397 -61.3368 c1.856 -57.9192 1.856 -57.3883 v1.856 -56.7311 1.9732 -50.7509 1.9397 -49.7899 c1.8242 -46.4748 -1.8761 -45.5096 -2.9047 -45.5096 c-3.9166 -45.5096 -4.2483 -45.5428 -4.8291 -45.7586 c-5.4043 -45.9724 -8.5454 -47.4177 -9.359 -47.8806 c-10.1853 -48.351 -10.353 -48.3316 -10.2708 -47.7659 c-10.2223 -47.4315 -10.2477 -46.7816 -10.1885 -46.4886 c-10.1214 -46.1568 -10.5031 -45.0619 -11.8967 -45.8415 c-14.1861 -46.7872 -16.7583 -47.0371 v-17.7033 -47.2185 -17.637 -47.9154 v-17.5705 -48.6122 -17.587 -48.5622 y-17.5684 -49.0936 -16.9733 -49.1926 v-16.4756 -49.2758 -16.3262 -49.2591 y-15.9943 -49.4086 -15.7629 -49.5245 -15.7629 -50.1218 c-15.7512 -61.2857 L-15.8176 -61.8165 -16.0283 -62.1483 -16.2274 -62.281 c-16.4265 -62.4137 -16.327 -62.4137 -17.0237 -62.5797 c-17.7206 -62.7456 -17.8087 -63.162 -17.8201 -63.8405 c-17.8359 -64.7876 -17.1233 -64.8691 -16.7583 -64.8027 c-16.3933 -64.7364 -14.3714 -64.5683 -13.7381 -64.5389 c-12.6598 -64.4892 -11.8635 -64.5389 -11.2163 -64.5389 c-10.5824 -64.5389 -9.0272 -64.7364 -8.6622 -64.8027 c-8.2972 -64.8691 -7.6471 -64.8365 -7.6004 -63.8405 c-7.55 -62.7636 -7.9646 -62.7304 -8.5959 -62.5465 c-9.0364 -62.418 -9.3259 -62.3474 -9.5249 -62.2146 c-9.7239 -62.082 -10.1545 -61.619 -10.1221 -60.7894 cBuu0.253 w-88.0114 -42.3744 m-80.6879 -49.7111 L-80.0175 -50.2854 -79.1963 -49.4193 -79.7719 -48.7284 C-86.9654 -41.4404 L-85.2319 -39.7093 L-77.9975 -47.0079 L-74.7588 -50.1005 -79.2056 -54.7303 -82.5413 -51.4869 C-89.8416 -44.1225 L-88.0799 -42.3544 LBUu-87.8678 -63.6917 m-80.5443 -71.0282 L-79.874 -71.6026 -79.0527 -70.7366 -79.6284 -70.0457 C-86.8218 -62.7577 L-85.0883 -61.0265 L-77.854 -68.3251 L-74.6153 -71.4177 -79.0621 -76.0475 -82.3977 -72.8041 C-89.6979 -65.4397 L-87.9364 -63.6717 LBUu-72.0393 -67.2051 m-79.3796 -59.8853 L-80.0513 -59.3125 -80.8706 -60.1804 -80.2933 -60.87 C-73.0832 -68.1416 L-74.8128 -69.8766 L-82.0638 -62.5946 L-85.3094 -59.5095 -80.8733 -54.8694 -77.5302 -58.1052 C-70.2132 -65.4529 L-71.9709 -67.2249 LBUu-72.2316 -45.8882 m-79.5718 -38.5685 L-80.2435 -37.9957 -81.0628 -38.8636 -80.4855 -39.5532 C-73.2754 -46.8247 L-75.0049 -48.5598 L-82.2559 -41.2778 L-85.5017 -38.1927 -81.0655 -33.5526 -77.7224 -36.7884 C-70.4055 -44.1361 L-72.1631 -45.9081 LBUu-92.418 -62.9059 m-85.0815 -55.5823 L-84.5071 -54.912 -85.3731 -54.0907 -86.0641 -54.6664 C-93.352 -61.8599 L-95.0832 -60.1264 L-87.7846 -52.8919 L-84.6921 -49.6533 -80.0622 -54.1001 -83.3056 -57.4357 C-90.67 -64.7359 L-92.438 -62.9744 LBUu-71.1008 -62.7623 m-63.7643 -55.4388 L-63.1899 -54.7683 -64.0559 -53.9472 -64.7468 -54.5228 C-72.0349 -61.7163 L-73.766 -59.9828 L-66.4673 -52.7484 L-63.3749 -49.5098 -58.7449 -53.9565 -61.9883 -57.2923 C-69.3527 -64.5925 L-71.1208 -62.8308 LBUu-67.7808 -46.8273 m-75.1173 -54.1508 L-75.6918 -54.8212 -74.8257 -55.6425 -74.1348 -55.0668 C-66.8467 -47.8733 L-65.1156 -49.6068 L-72.4143 -56.8412 L-75.5067 -60.0798 -80.1367 -55.6332 -76.8933 -52.2974 C-69.5289 -44.9972 L-67.7608 -46.7589 LBUu-89.0981 -46.9708 m-96.4346 -54.2945 L-97.009 -54.9648 -96.143 -55.7861 -95.4521 -55.2103 C-88.164 -48.0168 L-86.4329 -49.7503 L-93.7315 -56.9848 L-96.824 -60.2234 -101.4539 -55.7766 -98.2105 -52.4409 C-90.8461 -45.1407 L-89.0781 -46.9024 LBUUU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
94.58 710.37 697.26 728.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
94.58 710.37 697.26 728.37 R
7 X
0 0 0 1 0 0 0 K
V
94.58 719.37 715.58 719.37 2 L
V
7 H
2 Z
4 X
N
0 180 792 792 C
2 24 Q
0 X
0 0 0 1 0 0 0 K
(Threads Study Case #2) 94.58 736.37 T
3 18 Q
(Goals of Case Study) 94.58 691.37 T
0 16 Q
0.16 (1.) 152.18 652.71 S
0.83 0.16 (Measur) 173.78 652.71 B
0.83 0.16 (ement of the ef) 228.01 652.71 B
0.83 0.16 (fort r) 337.84 652.71 B
0.83 0.16 (equir) 375.27 652.71 B
0.83 0.16 (ed to write or convert an application.) 413.03 652.71 B
0.16 (2.) 152.18 626.31 S
0.83 0.16 (Measur) 173.78 626.31 B
0.83 0.16 (ement of performance impr) 228.01 626.31 B
0.83 0.16 (ovement on MP har) 429.17 626.31 B
0.83 0.16 (dwar) 574.34 626.31 B
0.83 0.16 (e.) 612.13 626.31 B
0.16 (3.) 152.18 599.91 S
0.2 0.16 (Identi\336cation of techniques that can be applied to writing or converting) 173.78 599.91 B
0.83 0.16 (other applications.) 173.78 581.51 B
3 18 Q
(The Problem) 94.58 535.37 T
5 12 Q
(n) 123.38 496.71 T
0 16 Q
0.83 0.16 (Application solves Fr) 141.81 496.71 B
0.83 0.16 (edholm Integral Equations of the Second kind.) 297.44 496.71 B
5 12 Q
(n) 123.38 478.31 T
0 16 Q
0.83 0.16 (Used to model pr) 141.81 478.31 B
0.83 0.16 (oblems in heat transfer) 270.1 478.31 B
0.83 0.16 (, \337uid \337ow and vibration analysis.) 437.01 478.31 B
5 12 Q
(n) 123.38 459.91 T
0 16 Q
0.83 0.16 (These equations look like:) 141.81 459.91 B
5 12 Q
(n) 123.38 341.71 T
0 16 Q
0.83 0.16 (Goal is to \336nd) 141.81 341.71 B
4 F
0.83 0.16 (f\050x\051) 251.3 341.71 B
0 F
0.83 0.16 (, everything else is speci\336ed.) 275.04 341.71 B
5 12 Q
(n) 123.38 323.31 T
0 16 Q
0.83 0.16 (By using Chebyshev polynomials the equation can be transformed into a) 141.81 323.31 B
0.83 0.16 (system of linear equations to be solved. The solution vector is an) 141.81 304.91 B
0.83 0.16 (appr) 141.81 286.51 B
0.83 0.16 (oximation of) 175.72 286.51 B
4 F
0.83 0.16 (f\050x\051) 273.22 286.51 B
0 F
0.83 0.16 (.) 296.96 286.51 B
94.58 257.63 697.26 752.37 C
100.58 354.78 691.26 454.57 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 14 Q
0 X
0 0 0 1 0 0 0 K
(f) 279.96 402.15 T
(x) 288.52 402.15 T
1 F
(\050) 283.85 402.15 T
(\051) 294.73 402.15 T
7 F
(l) 314.29 402.15 T
6 F
(K) 337.47 402.15 T
(x) 351.47 402.15 T
(y) 364.69 402.15 T
7 F
(,) 357.69 402.15 T
1 F
(\050) 346.81 402.15 T
(\051) 370.9 402.15 T
6 F
(f) 376.39 402.15 T
(y) 384.95 402.15 T
1 F
(\050) 380.29 402.15 T
(\051) 391.17 402.15 T
6 F
(y) 403.65 402.15 T
(d) 396.65 402.15 T
6 12 Q
(a) 329.38 394.78 T
(b) 329.38 409.57 T
7 24 Q
(\362) 322.8 395.47 T
1 14 Q
(+) 302.89 402.15 T
6 F
(g) 431.76 402.15 T
(x) 443.42 402.15 T
1 F
(\050) 438.76 402.15 T
(\051) 449.64 402.15 T
6 F
(a) 461.3 402.15 T
(x) 482.98 402.15 T
(b) 503.88 402.15 T
7 F
(\243) 471.79 402.15 T
(\243) 492.69 402.15 T
(,) 454.3 402.15 T
1 F
(=) 416.86 402.15 T
94.58 257.63 697.26 752.37 C
0 180 792 792 C
94.42 224 294.42 239 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 94.42 231 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 6
%%Page: "1" 7
612 792 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
99.18 745.2 695.37 745.2 2 L
7 H
2 Z
4 X
0 0 0 1 0 0 0 K
N
97.29 225 694.07 225 2 L
N
94.69 193.88 703.43 215 R
7 X
V
0 12 Q
0 X
(Unclassi\336ed) 94.69 207 T
(1 of 7) 389.86 207 T
(3\24531\24594) 653.34 207 T
94.32 230.41 277.19 245.41 R
7 X
V
277.91 229.69 517.32 351.69 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 32 Q
0 X
(Threads Study Case #2) 219.72 551.79 T
3 24 Q
(Integral Equations) 299.07 483.12 T
278.05 231.42 517.46 353.42 R
7 X
V
278.05 233.54 517.46 335.42 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
278.05 233.54 517.46 335.42 R
7 X
0 0 0 1 0 0 0 K
V
0 159 400 335 468 197.2 76.19 302.12 242.54 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Art Department) (Chartmasters)%%Title: (Sun logo.eps)%%CreationDate: (5/18/92) (5:17 PM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: 159 400 335 468%AI3_ColorUsage: Black&White%AI3_TemplateBox: 288 360 288 360%AI3_TileBox: 0 0 552 730%AI3_DocumentPreview: Macintosh_Pic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: HelveticaAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 A0 To1.5076 0 0 1.4228 232.9597 404.6536 0 TpTP2 Tr0 O0 g0 R1 G0 i 0 J 0 j 0.1 w 4 M []0 d%AI3_Note:0 D/_Helvetica 9.474 Tf0 Ts100 Tz0 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq11.999 0 Tl0 Tc0 Tw(microsystems\r) Tx TOu0 G0.14 w205.9009 446.4922 m194.5679 457.522 L194.0363 458.2052 192.9739 457.674 193.8595 456.6116 C205.1929 445.5818 L201.9546 442.3434 L191.4308 452.7661 L184.6509 457.4208 192.0883 467.5402 198.8178 460.1531 C209.2405 449.6293 L206.0021 446.3914 LB206.0021 414.8194 m194.6691 425.8493 L194.1375 426.5321 193.0751 426.0013 193.9607 424.9385 C205.2941 413.9091 L202.0558 410.6707 L191.5319 421.0933 L184.7521 425.7481 192.1895 435.8671 198.919 428.4804 C209.3417 417.9566 L206.1033 414.7182 LB212.9844 445.683 m201.9546 434.3495 L201.2714 433.818 201.803 432.7556 202.8654 433.6412 C213.8952 444.9746 L217.1332 441.7362 L206.7105 431.2124 L202.0558 424.4329 191.9367 431.8704 199.3238 438.5995 C209.8477 449.0221 L213.0856 445.7842 LB181.1093 445.4806 m170.0799 434.1472 L169.3967 433.6156 169.9283 432.5532 170.9907 433.4388 C182.0201 444.7722 L185.2581 441.5338 L174.8354 431.01 L170.1811 424.2305 160.062 431.668 167.4491 438.3971 C177.9726 448.8197 L181.2105 445.5818 LB206.9129 421.9029 m217.9427 433.2364 L218.6255 433.7676 218.0948 434.8299 217.032 433.9447 C206.0021 422.6113 L202.7642 425.8493 L213.1868 436.3731 L217.8415 443.153 227.9602 435.7155 220.5739 428.9864 C210.0501 418.5638 L206.8117 421.8017 LB174.9366 421.7005 m185.9664 433.034 L186.6492 433.5652 186.1184 434.6275 185.0556 433.7424 C174.0258 422.4089 L170.7883 425.6469 L181.2105 436.1707 L185.8652 442.9506 195.9843 435.5131 188.5976 428.784 C178.0738 418.3614 L174.8354 421.5993 LB181.9189 452.6649 m193.2523 441.635 L193.7831 440.9518 194.8459 441.4834 193.9607 442.5458 C182.6273 453.5756 L185.8652 456.814 L196.3891 446.3914 L203.169 441.7362 195.7315 431.6172 189.0024 439.0043 C178.5794 449.5281 L181.8177 452.7661 LB182.1213 421.0933 m193.4547 410.0635 L193.9855 409.3803 195.0483 409.9119 194.1631 410.9743 C182.8297 422.0041 L186.0676 425.2421 L196.5915 414.8194 L203.3714 410.1647 195.9339 400.0457 189.2048 407.4328 C178.7817 417.9566 L182.0201 421.1945 LBU0.04 w275.7507 423.0245 m275.7103 423.4257 275.5639 423.4181 275.1007 423.2497 c274.2755 422.9497 270.9008 419.7246 269.3756 418.7498 c268.3936 418.1218 266.4756 418.0498 y259.5757 418.0498 257.9997 423.6497 257.9997 425.1997 c257.9997 441.4494 l257.9997 442.3494 257.5509 442.5742 257.1497 442.7494 c256.6758 442.7742 255.8258 442.6994 v254.879 442.6158 254.8758 443.4242 y254.801 444.2994 254.7758 444.5994 v254.6738 445.821 256.2758 445.8994 y261.0757 446.1994 264.5496 447.3502 y266.3496 447.9501 266.4996 446.6502 266.3996 446.4002 c266.2804 446.1026 266.2756 443.7002 266.1756 443.2002 c266.1756 428.598 l266.2256 426.4745 267.2756 424.2245 270.5256 424.2245 c273.7755 424.2245 275.5755 426.4745 275.7255 427.4244 c275.7211 441.4742 l275.7211 442.3742 275.2755 442.6494 274.9007 442.7994 c273.4007 442.8742 272.0255 442.7242 v270.8779 442.599 270.8755 443.6494 y270.9507 444.3742 270.9495 444.8242 v270.9471 445.879 271.8755 446.0494 y277.8506 445.7994 281.9006 447.5741 y283.7006 448.1741 284.3753 446.3742 284.2005 445.8742 c284.0577 445.467 283.8753 442.4994 283.9001 441.6994 C283.9253 424.2505 l284.0253 423.4505 283.9753 422.7245 284.2753 422.5245 c284.5753 422.3245 285.1541 422.3305 286.1253 422.0497 c287.0753 421.7745 287.2937 421.4738 287.2253 420.1746 c287.1505 418.7498 286.5753 418.6246 286.0253 418.7246 c285.4753 418.8246 283.6253 418.7746 282.6754 418.8746 c281.7254 418.9746 279.2754 418.8746 277.7254 418.6746 c276.1755 418.4746 275.5007 418.7746 275.6015 419.7746 c275.6483 420.2366 275.6755 420.0498 275.7503 420.9998 c275.7887 421.4893 275.7755 422.7745 275.7507 423.0245 cb299.1499 445.225 mB252.1758 441.0242 mB233.3513 426.6997 m233.3513 427.1744 234.2761 427.5496 234.7261 427.5496 c235.1761 427.5496 235.0009 427.5997 235.4509 427.4996 c235.9009 427.3997 236.5509 427.0745 236.6509 426.3745 c236.7509 425.6745 236.6589 424.9493 237.376 423.8497 c238.5008 422.1245 240.626 421.8749 241.926 421.8249 c243.4628 421.7657 244.7579 422.0865 245.4011 422.7497 c246.2011 423.5749 246.3427 424.4761 246.4011 425.4497 c246.4759 426.6997 246.1759 427.7996 245.3511 428.2496 c244.8151 428.542 243.176 429.1744 242.176 429.4744 c241.176 429.7744 236.7009 431.3244 235.8261 431.9996 c235.0897 432.5676 232.5261 433.3004 232.3761 438.4003 c232.2261 443.5002 236.2761 446.0242 236.8761 446.4242 c237.4761 446.8242 240.2008 448.0493 244.3507 448.0993 c248.5007 448.1493 250.9942 447.0769 251.6258 446.8242 c252.3758 446.5242 252.8118 445.8054 252.6258 444.9742 c252.3006 443.5242 252.2562 443.0738 252.1758 440.9002 c252.151 440.2243 251.4758 439.8243 250.0019 439.9503 c249.4539 439.9975 249.1007 440.5735 249.0507 441.0994 c248.9847 441.7962 248.8259 442.8734 248.4759 443.2494 c248.2011 443.5446 247.8007 444.5742 244.526 444.5742 c241.5256 444.5742 240.6664 442.7714 240.526 441.2242 c240.426 440.1243 240.776 438.9983 242.126 438.0743 c243.5916 437.0711 248.6259 435.8243 250.1259 435.3503 c251.3574 434.9611 254.6258 433.1984 254.3258 428.4244 c254.0778 424.4825 252.6238 422.8609 250.6259 421.1006 c248.5259 419.2506 245.8155 418.659 245.4259 418.5246 c243.026 417.6998 236.6425 417.9134 235.0261 418.2998 c233.8761 418.5746 232.9013 418.7998 233.0761 420.5246 c233.2261 422.0041 233.3513 425.6969 233.3513 426.6997 cb299.2991 424.7245 m299.2991 440.0743 l299.2751 440.0743 299.3715 440.7306 300.9251 441.1742 c303.725 441.9742 309.0058 442.9354 308.8258 436.4623 c308.801 435.5623 309.1381 424.7369 308.8382 422.4369 c308.5706 420.3858 308.6734 419.7734 308.849 419.4246 c308.975 419.1746 309.3002 418.4498 311.5489 418.8246 c314.1689 419.2614 317.6516 418.8942 318.9988 418.677 c320.1 418.4998 320.4988 419.3498 320.4488 420.6498 c320.3988 421.9497 319.644 422.1801 318.5248 422.3497 c317.7 422.4745 317.55 423.1997 317.4748 423.8997 c317.3488 429.0496 317.3488 429.8496 v317.3488 430.84 317.5252 439.8515 317.4748 441.2994 c317.3008 446.295 311.7249 447.7493 310.1749 447.7493 c308.6502 447.7493 308.1502 447.6993 307.275 447.3741 c306.4082 447.0522 301.6751 444.8742 300.4491 444.1766 c299.2039 443.4678 298.9511 443.497 299.0751 444.3494 c299.1483 444.8534 299.1099 445.8326 299.1991 446.2742 c299.3003 446.7742 298.7251 448.4241 296.6251 447.2494 c293.1752 445.8242 289.2993 445.4478 v287.8753 445.1742 287.9753 444.1242 v288.0753 443.0742 288.0505 443.1494 y288.0785 442.3486 288.9753 442.1994 v289.7253 442.0742 289.9505 442.0994 y290.4505 441.8742 290.7992 441.6994 290.7992 440.7994 c290.8168 423.9769 L290.7168 423.1769 290.3992 422.6769 290.0993 422.4769 c289.7993 422.2769 289.9492 422.2769 288.8993 422.0269 c287.8493 421.7769 287.7165 421.1493 287.6993 420.127 c287.6753 418.6998 288.7493 418.577 289.2993 418.677 c289.8493 418.777 292.896 419.0302 293.8504 419.0746 c295.4752 419.1494 296.6752 419.0746 297.6503 419.0746 c298.6055 419.0746 300.9491 418.777 301.4991 418.677 c302.0491 418.577 303.0287 418.6262 303.0991 420.127 c303.175 421.7497 302.5503 421.7997 301.5991 422.0769 c300.9351 422.2705 300.4991 422.3769 300.1991 422.5769 c299.8991 422.7769 299.2503 423.4745 299.2991 424.7245 cB%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
%%EndDocument
FMENDEPSF
0 180 792 792 C
94 232.14 275.04 244 R
7 X
0 0 0 1 0 0 0 K
V
0 12 Q
0 X
0.12 (SMCC/OpCom) 94 236 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 7
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 7
%%DocumentFonts: Palatino-Roman
%%+ Times-Roman
%%+ Helvetica-Bold
%%+ Helvetica
%%+ Palatino-Italic
%%+ ZapfDingbats
%%+ Times-Italic
%%+ Symbol
%%+ Times-BoldItalic
%%EOF
